@using Models;
@using System.Text;
@using System.Web.Script.Serialization;
@using ContentModels = Umbraco.Web.PublishedContentModels;
@inherits UmbracoViewPage


@{
    //Obtain current page as strongly typed ip
    int? currentPageId = UmbracoContext.Current.PageId;
    IPublishedContent ipCurrentPg = Umbraco.TypedContent(currentPageId);


    //Other variables
    String strH1 = String.Empty;
    String strH3 = String.Empty;
    StringBuilder sbCite = new StringBuilder();
    String heightClass = "narrow";
    String visionaryName = String.Empty;
    List<DateTime> lstDateRange;
    StringBuilder sbDateRange = new StringBuilder();


    //Obtain page's doctype
    String docType = ipCurrentPg.DocumentTypeAlias;


    //Check if the parent doctype should be used instead.
    if (docType != Common.docType.Home && ipCurrentPg.Parent.DocumentTypeAlias == Common.docType.ManageAccount)
    {
        docType = Common.docType.ManageAccount;
    }
    else if (docType != Common.docType.Home && ipCurrentPg.Parent.DocumentTypeAlias == Common.docType.IlluminationStatistics)
    {
        docType = ipCurrentPg.Parent.DocumentTypeAlias;
    }


    //
    switch (docType)
    {
        case Common.docType.Message:
            //Obtain list of all dates
            lstDateRange = ipCurrentPg.GetPropertyValue<List<DateTime>>(Common.NodeProperties.dateOfMessages);

            //Determine proper date range for messages
            if (lstDateRange != null)
            {
                switch (lstDateRange.Count)
                {
                    case 0: //Leave blank
                        break;

                    case 1:
                        sbDateRange.Append(lstDateRange.First().ToString("MMMM dd"));
                        break;

                    case 2:
                        sbDateRange.Append(lstDateRange.First().ToString("MMMM dd"));
                        sbDateRange.Append(" and ");
                        sbDateRange.Append(lstDateRange.Last().ToString("MMMM dd"));
                        break;

                    default: //More than 2 dates in list
                        sbDateRange.Append(lstDateRange.First().ToString("MMMM dd"));
                        sbDateRange.Append(" thru ");
                        sbDateRange.Append(lstDateRange.Last().ToString("MMMM dd"));
                        break;
                }
            }

            //Obtain visionary's name
            visionaryName = ipCurrentPg.AncestorsOrSelf().FirstOrDefault(x => x.DocumentTypeAlias == Common.docType.Visionary).GetPropertyValue<String>(Common.NodeProperties.visionarysName);
            break;


        case Common.docType.WebmasterMessage:
            //Obtain list of all dates
            lstDateRange = ipCurrentPg.GetPropertyValue<List<DateTime>>(Common.NodeProperties.dateOfMessages);

            //Determine proper date range for messages
            if (lstDateRange != null)
            {
                switch (lstDateRange.Count)
                {
                    case 0: //Leave blank
                        break;

                    case 1:
                        sbDateRange.Append(lstDateRange.First().ToString("MMMM dd"));
                        break;

                    case 2:
                        sbDateRange.Append(lstDateRange.First().ToString("MMMM dd"));
                        sbDateRange.Append(" and ");
                        sbDateRange.Append(lstDateRange.Last().ToString("MMMM dd"));
                        break;

                    default: //More than 2 dates in list
                        sbDateRange.Append(lstDateRange.First().ToString("MMMM dd"));
                        sbDateRange.Append(" thru ");
                        sbDateRange.Append(lstDateRange.Last().ToString("MMMM dd"));
                        break;
                }
            }

            //Obtain name
            visionaryName = ipCurrentPg.AncestorsOrSelf().FirstOrDefault(x => x.DocumentTypeAlias == Common.docType.WebmasterMessageList).Name;
            break;


        case Common.docType.PrayerRequest:
            strH1 = ipCurrentPg.GetPropertyValue<String>(Common.NodeProperties.prayerTitle);

            //Generate user's name
            var CmMember = new ContentModels.Member(Umbraco.TypedMember(ipCurrentPg.GetPropertyValue<int>(Common.NodeProperties.prayerRequestMember)));
            StringBuilder sbAuthor = new StringBuilder();
            sbAuthor.Append(CmMember.FirstName);
            sbAuthor.Append("&nbsp;&nbsp;");
            sbAuthor.Append(CmMember.LastName);
            sbAuthor.Append(".");
            strH3 = sbAuthor.ToString();
            break;


        case Common.docType.Home:
            heightClass = "tall";
            break;


        default:
            break;
    }
}


@*ORIGINAL*@
<div class="grid-container titleSectionPnl">
    <div class="grid-x align-middle  @heightClass">
        <div class="large-20 large-offset-2 cell">

            @switch (docType)
            {
                case Common.docType.Home:
                    <br />
                    @ipCurrentPg.GetPropertyValue(Common.NodeProperties.topBanner);
                    <br />
                    break;
                case Common.docType.IlluminationStatistics:
                    <br class="hide-for-small-only" />
                    <br />
                    <h1>@ipCurrentPg.Parent.Name</h1>
                    <h3>@ipCurrentPg.Name</h3>
                    <br />
                    <br />
                    break;
                case Common.docType.Search:
                    <br class="hide-for-small-only" />
                    <br class="hide-for-medium-only" />
                    @Html.Partial("Partials/Search/_searchPnl")
                    <br />
                    <br />
                    break;
                case Common.docType.Scripture:
                    <br class="hide-for-small-only" />
                    <br />
                    <h1>The Book of Genesis</h1>
                    <h3>The Douay-Rheims Bible</h3>
                    <br />
                    <br />
                    break;
                case Common.docType.Message:
                    <br class="hide-for-small-only" />
                    <br />
                    <h1>@ipCurrentPg.Name</h1>
                    <h3>By @visionaryName</h3>
                    if (!string.IsNullOrEmpty(@sbDateRange.ToString()))
                    {
                        <cite>@sbDateRange.ToString()</cite>
                    }
                    <br />
                    <br />
                    break;
                case Common.docType.WebmasterMessage:
                    <br class="hide-for-small-only" />
                    <br />
                    <h1>@ipCurrentPg.Name</h1>
                    <h3>By @visionaryName</h3>
                    if (!string.IsNullOrEmpty(@sbDateRange.ToString()))
                    {
                        <cite>@sbDateRange.ToString()</cite>
                    }
                    <br />
                    <br />
                    break;
                case Common.docType.BlockList:
                    <br class="hide-for-small-only" />
                    <br />
                    <h1>@ipCurrentPg.Name</h1>
                    <br />
                    <br />
                    break;
                case Common.docType.Visionary:
                    <br class="hide-for-small-only" />
                    <br />
                    <h1>@ipCurrentPg.Name</h1>
                    <br />
                    <br />
                    break;
                case Common.docType.VisionaryList:
                    <br class="hide-for-small-only" />
                    <br />
                    <h1>@ipCurrentPg.Name</h1>
                    <br />
                    <br />
                    break;
                case Common.docType.PrayerRequest:
                    <br class="hide-for-small-only" />
                    <br />
                    <h1>@strH1</h1>
                    <h3>By @Html.Raw(strH3)</h3>
                    <br />
                    <br />
                    break;
                case Common.docType.PrayerList:
                    <br class="hide-for-small-only" />
                    <br />
                    <h1>@ipCurrentPg.Name</h1>
                    <br />
                    <br />
                    break;
                case Common.docType.IlluminationStoryList:
                    <br class="hide-for-small-only" />
                    <br />
                    <h1>@ipCurrentPg.Name</h1>
                    <br />
                    <br />
                    break;
                case Common.docType.IlluminationStory:
                    <br class="hide-for-small-only" />
                    <br />
                    <h1>@ipCurrentPg.Parent.Name</h1>
                    <br />
                    <br />
                    break;
                case Common.docType.Donations:
                    <br class="hide-for-small-only" />
                    <br />
                    <h1>Support Us</h1>
                    <br />
                    <br />
                    break;
                case Common.docType.ContactUs:
                    <br class="hide-for-small-only" />
                    <br />
                    <h1>@ipCurrentPg.Name</h1>
                    <br />
                    <br />
                    break;
                case Common.docType.CreateAccount:
                    <br class="hide-for-small-only" />
                    <br />
                    <h1>@ipCurrentPg.Name</h1>
                    <br />
                    <br />
                    break;
                case Common.docType.ManageAccount:
                    <br class="hide-for-small-only" />
                    <br />
                    <h1>@ipCurrentPg.Parent.Name</h1>
                    <br />
                    <br />
                    break;
                case Common.docType.Login:
                    <br class="hide-for-small-only" />
                    <br />
                    <h1>@ipCurrentPg.Name</h1>
                    <br />
                    <br />
                    break;
                case Common.docType.Standard:
                    <br class="hide-for-small-only" />
                    <br />
                    <h1>@ipCurrentPg.GetPropertyValue(Common.NodeProperties.title)</h1>
                    <h3>@ipCurrentPg.GetPropertyValue(Common.NodeProperties.subtitle)</h3>
                    if (!String.IsNullOrEmpty(sbCite.ToString()))
                    {
                        <cite>@Html.Raw(sbCite.ToString())</cite>
                    }
                    <br />
                    <br />
                    break;
                default:
                    <br class="hide-for-small-only" />
                    <br />
                    <h1>@ipCurrentPg.GetPropertyValue(Common.NodeProperties.title)</h1>
                    <h3>@ipCurrentPg.GetPropertyValue(Common.NodeProperties.subtitle)</h3>
                    <br />
                    <br />
                    break;
            }

        </div>
    </div>
</div>







@*PARALLAX MODE*@
@*<div class="grid-container titleSectionPnl">
        <div ID="pnlParallax" class="parallax-window align-middle hrefPnl caseStudy cell" data-image-src="/images/toplevel/BannerBg01.png" data-speed="0.75" data-parallax="scroll" data-naturalwidth="1570" data-naturalheight="381" data-bleed="0" data-z-index="0" data-androidfix="true" data-iosfix="true">
            <div class="grid-x" style="width: 100%;">
                <div class="overlayColor"></div>
                <div class="small- medium- large-20 large-offset-2 cell end content">
                    <p>"Before I come as the just Judge, I am coming first as the King of Mercy. Before the day of justice arrives, there will be given to people a sign in the heavens of this sort:</p>
                    <p>All light in the heavens will be extinguished, and there will be great darkness over the whole earth. Then the sign of the cross will be seen in the sky, and from the openings where the hands and the feet of the Savior were nailed will come forth great lights which will light up the earth for a period of time. This will take place shortly before the last day."</p>
                    <br />
                    <cite>Message given to St. Faustina<br />Diary of Divine Mercy, n. 83</cite>
                </div>
            </div>
        </div>
    </div>*@