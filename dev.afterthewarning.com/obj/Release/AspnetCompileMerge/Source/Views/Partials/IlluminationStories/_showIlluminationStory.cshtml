@inherits UmbracoViewPage<Models.illuminationStory>



<div id="pnlShowIlluminationStory">
    <h3>Your Illumination Story</h3>
    <br class="show-for-small-only" />

    @if (TempData["IlluminationStoryAddedSuccessfully"] != null && (bool)TempData["IlluminationStoryAddedSuccessfully"])
    {
        <hr />
        <h3 class="text-center">Your story has been successfully created!</h3>
        <hr />
        <br />
    }
    else if (TempData["IlluminationStoryUpdatedSuccessfully"] != null && (bool)TempData["IlluminationStoryUpdatedSuccessfully"])
    {
        <hr />
        <h3 class="text-center">Your story has been successfully updated!</h3>
        <hr />
        <br />
    }

    <br class="hide-for-small-only" />

    <div class="grid-x grid-padding-x">
        <div class="cell large-18">
            <div class="grid-x grid-padding-x">
                <div class="cell large-6">
                    <h4>Title</h4>
                </div>
                <div class="cell large-18 text-20U">
                    @Model.CmIpIlluminationStory.Title
                </div>
            </div>
            <br class="hide-for-large" />
            <div class="grid-x grid-padding-x">
                <div class="cell large-6">
                    <h4>Author</h4>
                </div>
                <div class="cell large-18 text-20U">
                    @Html.Raw(Model.Author)
                </div>
            </div>
            <br class="hide-for-large" />
            <div class="grid-x grid-padding-x">
                <div class="cell large-6">
                    <h4>Experience</h4>
                </div>
                <div class="cell large-18 text-20U">
                    @Model.CmIpIlluminationStory.ExperienceType
                </div>
            </div>
        </div>
        <div class="cell large-6">
            <br class="hide-for-large" />
            <br class="hide-for-large" />
            <button id="btnEditStory" class="button primary expanded avgHeight">Edit Story</button>
        </div>
    </div>



    <br />
    <br />
    <div class="grid-x grid-padding-x grid-padding-y optionalFieldsPnl">
        <div class="cell large-22 large-offset-1">
            <h4 class="text-center">Demographics</h4>
            <hr />
            <div class="grid-x grid-margin-x grid-margin-y optionalFields">
                <div class="cell small-12 large-4 text-right large-text-left">
                    <p>Age</p>
                </div>
                <div class="cell small-12 large-8 text-20U">
                    @if (Model.CmMember.Age == 0)
                    {
                        <span>---</span>
                    }
                    else
                    {
                        @Model.CmMember.Age
                    }
                </div>
                <div class="cell small-12 large-4 text-right large-text-left">
                    <p>Gender</p>
                </div>
                <div class="cell small-12 large-8 text-20U">
                    @if (Model.CmMember.Gender == 0)
                    {
                        <span>---</span>
                    }
                    else
                    {
                        @umbraco.library.GetPreValueAsString(Model.CmMember.Gender)
                    }
                </div>
                <div class="cell small-12 large-4 text-right large-text-left">
                    <p>Race</p>
                </div>
                <div class="cell small-12 large-8 text-20U">
                    @if (Model.CmMember.Race.FirstOrDefault() == null)
                    {
                        <span>---</span>
                    }
                    else
                    {
                        @Model.CmMember.Race.FirstOrDefault()
                    }
                </div>
                <div class="cell small-12 large-4 text-right large-text-left">
                    <p>Country</p>
                </div>
                <div class="cell small-12 large-8 text-20U">
                    @if (Model.CmMember.Country.Trim() == "")
                    {
                        <span>---</span>
                    }
                    else
                    {
                        @Model.CmMember.Country
                    }
                </div>
                <div class="cell small-12 large-4 text-right large-text-left">
                    <p>Religion</p>
                </div>
                <div class="cell small-12 large-8 text-20U">
                    @if (Model.CmMember.Religion.Trim() == "")
                    {
                        <span>---</span>
                    }
                    else
                    {
                        @Model.CmMember.Religion
                    }
                </div>
            </div>
            <br />
        </div>
    </div>

    <br />
    <br />
    <div class="grid-x grid-padding-x">
        <div class="cell large-24">
            <h4>Story</h4>
            @*@{ var story = Html.DisplayFor(m => m.Story); }
                @Html.Raw(@umbraco.library.ReplaceLineBreaks(story.ToString()))*@
            @Html.Raw(@umbraco.library.ReplaceLineBreaks(Model.CmIpIlluminationStory.Story))
        </div>
    </div>
    <br />
</div>