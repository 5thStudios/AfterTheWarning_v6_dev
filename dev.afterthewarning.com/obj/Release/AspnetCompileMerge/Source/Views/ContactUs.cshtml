@using formulate.core.Models;
@using formulate.app.Types;
@using ContentModels = Umbraco.Web.PublishedContentModels;
@inherits UmbracoViewPage<ContentModels.ContactUs>
@{ Layout = "TopLevel.cshtml"; }




@{
    //Obtain page summary
    IHtmlString contactSummary = Html.Raw(umbraco.library.ReplaceLineBreaks(Model.ContactSummary));

    //Obtain the form and its view model
    ConfiguredFormInfo pickedForm = Model.GetPropertyValue<ConfiguredFormInfo>("formPicker");
    FormViewModel vm = formulate.api.Rendering.GetFormViewModel(pickedForm.FormId, pickedForm.LayoutId, pickedForm.TemplateId, Model);



    ////Obtain current page as strongly typed ip
    //int? currentPageId = UmbracoContext.Current.PageId;
    //IPublishedContent ipCurrentPg = Umbraco.TypedContent(currentPageId);

    ////Obtain page summary
    //IHtmlString contactSummary = Html.Raw(umbraco.library.ReplaceLineBreaks(ipCurrentPg.GetPropertyValue<String>(Common.NodeProperties.contactSummary)));

    ////Obtain the form and its view model
    //ConfiguredFormInfo pickedForm = pickedForm = ipCurrentPg.GetPropertyValue<ConfiguredFormInfo>("formPicker");
    //FormViewModel vm = formulate.api.Rendering.GetFormViewModel(pickedForm.FormId, pickedForm.LayoutId, pickedForm.TemplateId, ipCurrentPg);

}



<div class="form">
    <div class="grid-x">
        <div class="cell">
            <p>@contactSummary</p>
            <div class="formulate-wrapper">
                <h2>Drop Us a Line</h2>
                @Html.Partial("~/Views/Partials/Formulate/RenderForm.cshtml", vm)
            </div>
        </div>
    </div>

    <div class="grid-x">
        <div class="cell">
            <h2>Snail Mail</h2>
            <address>
                @Html.Raw(umbraco.library.ReplaceLineBreaks(Model.MailingAddress))
            </address>
        </div>
    </div>
</div>