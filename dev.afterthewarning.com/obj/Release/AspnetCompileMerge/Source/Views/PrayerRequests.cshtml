@using Models;
@using System;
@using System.Collections.Generic;
@using System.Linq;
@using System.Text;
@using System.Web;
@using System.Web.Mvc;
@using Umbraco.Web.Mvc;
@using Umbraco.Core.Models;
@using Umbraco.Core.Services;
@using Umbraco.Web.PublishedContentModels;
@using Umbraco.Web;
@using Newtonsoft.Json;
@using ContentModels = Umbraco.Web.PublishedContentModels;

@inherits UmbracoViewPage
@{ Layout = "ManageAccount.cshtml"; }


@{
    //Instantiate variables
    int requests = 0;
    int offered = 0;
    int pledged = 0;
    String newPrayerRequestUrl = Umbraco.TypedContent((int)(Common.siteNode.AddEditPrayer)).Url;
    List<ContentModels.PrayerRequest> lstPrayerRequests = new List<ContentModels.PrayerRequest>();


    //Add Prayer Request to member's records
    IMember member = ApplicationContext.Current.Services.MemberService.GetByUsername(Membership.GetUser().UserName);
    if (member != null)
    {
        //Instantiate list
        List<_prayerRequest> lstJsonPrayerRequests = new List<_prayerRequest>();
        List<_prayerRequest> lstJsonPrayersOffered = new List<_prayerRequest>();

        //Populate lists with any existing data
        if (member.HasProperty(Common.NodeProperties.prayerRequests) && member.GetValue(Common.NodeProperties.prayerRequests) != null)
        {
            lstJsonPrayerRequests = JsonConvert.DeserializeObject<List<_prayerRequest>>(member.GetValue(Common.NodeProperties.prayerRequests).ToString());
        }
        if (member.HasProperty(Common.NodeProperties.prayersOfferedFor) && member.GetValue(Common.NodeProperties.prayersOfferedFor) != null)
        {
            lstJsonPrayersOffered = JsonConvert.DeserializeObject<List<_prayerRequest>>(member.GetValue(Common.NodeProperties.prayersOfferedFor).ToString());
        }

        //Get the requested prayer count
        requests = lstJsonPrayerRequests.Count;

        //Get the pledged prayer count
        pledged = lstJsonPrayersOffered.Count;

        //Get the total count of prayers being offered
        UmbracoHelper umbracoHelper = new UmbracoHelper(UmbracoContext.Current);
        foreach (_prayerRequest request in lstJsonPrayerRequests)
        {
            IPublishedContent ipPrayer = umbracoHelper.TypedContent(request.prayer);
            offered += ipPrayer.GetPropertyValue<int>(PrayerRequest.GetModelPropertyType(x => x.TotalPrayersOffered).PropertyTypeAlias);
        }

        //Get each node from list
        foreach (_prayerRequest jsonPrayRequest in lstJsonPrayerRequests.OrderByDescending(i => i.date))
        {
            //Add each prayer request to list of models
            lstPrayerRequests.Add(new ContentModels.PrayerRequest(umbracoHelper.TypedContent(jsonPrayRequest.prayer)));
        }
    }
}


<div id="pnlPrayerRequests" class="pnl">
    <div class="grid-x">
        <div class="cell">

            <div id="pnlPrayerSummary">
                <h3>Prayer Requests</h3>
                <div class="grid-x grid-padding-x">
                    <div class="cell large-14">
                        <p>Here you can find all your prayer requests as well as a summary of all requested prayers, offered prayers and pledged prayers.</p>
                        <div class="grid-x grid-margin-x grid--x">
                            <div class="cell large-18">
                                <a class="button primary expanded avgHeight" href="@newPrayerRequestUrl">New Prayer Request</a>
                            </div>
                        </div>
                        <br class="hide-for-large" />
                    </div>
                    <div class="cell large-10 experiencePnl">
                        <h4 class="text-center">Summary</h4>
                        <div class="grid-x">
                            <div class="cell small-12 dataType text-right">Requests</div>
                            <div class="cell small-10 small-offset-2 dataValue text-left">@requests.ToString("N0")</div>
                        </div>
                        <div class="grid-x">
                            <div class="cell small-12 dataType text-right">Offered</div>
                            <div class="cell small-10 small-offset-2 dataValue text-left">@offered.ToString("N0")</div>
                        </div>
                        <div class="grid-x">
                            <div class="cell small-12 dataType text-right">Pledged</div>
                            <div class="cell small-10 small-offset-2 dataValue text-left">@pledged.ToString("N0")</div>
                        </div>
                        <br />

                    </div>
                </div>
                <br />

                @if (TempData["NewPrayerCreatedSuccessfully"] != null && (bool)TempData["NewPrayerCreatedSuccessfully"])
                {<h4 class="msg">Your prayer has been submitted successfully.</h4> }
                else if (TempData["PrayerUpdatedSuccessfully"] != null && (bool)TempData["PrayerUpdatedSuccessfully"])
                {<h4 class="msg">Your prayer has been updated successfully.</h4> }
                else
                { <br />}

                <br />
                <div class="prayerList">
                    <div class="grid-x align-middle grid-padding-x prayer header">
                        <div class="cell small-6 large-6">
                            <h5>Date</h5>
                        </div>
                        <div class="cell auto">
                            <h5>Title</h5>
                        </div>
                        <div class="cell shrink">
                            <h5>Prayers Offered</h5>
                        </div>
                        <div class="cell hide-for-small-only large-2">&nbsp;</div>
                    </div>
                    @if (requests == 0)
                    {
                        <div class="grid-x align-middle grid-padding-x prayer">
                            <div class="cell text-center">
                                <br />
                                <h5>You have no existing prayer requests</h5>
                                <br />
                            </div>
                        </div>
                    }
                    else
                    {
                        foreach (var prayerRequest in lstPrayerRequests)
                        {
                            <div class="grid-x align-middle grid-padding-x prayer">
                                <div class="cell small-6 large-6">
                                    <a href="@prayerRequest.Url" data-nodeid="@prayerRequest.Id">
                                        <h5>@prayerRequest.RequestDate.ToString("MMM d, yyyy")</h5>
                                    </a>
                                </div>
                                <div class="cell auto">
                                    <a href="@prayerRequest.Url" data-nodeid="@prayerRequest.Id">
                                        <h5>@prayerRequest.PrayerTitle</h5>
                                    </a>
                                </div>
                                <div class="cell shrink">
                                    <a href="@prayerRequest.Url" data-nodeid="@prayerRequest.Id">
                                        <h5>@prayerRequest.TotalPrayersOffered</h5>
                                    </a>
                                </div>
                                <div class="cell shrink large-2">
                                    <a href="@(newPrayerRequestUrl)?nodeid=@prayerRequest.Id" class="btnEditPrayer">
                                        <img alt="edit prayer" src="~/images/common/edit-icon.png" />
                                    </a>
                                </div>
                            </div>
                        }
                    }
                </div>

            </div>

        </div>
    </div>
</div>
