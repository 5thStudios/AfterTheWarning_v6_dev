//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.10.102
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

namespace Umbraco.Web.PublishedContentModels
{
	// Mixin content Type 1080 with alias "message"
	/// <summary>Message</summary>
	public partial interface IMessage : IPublishedContent
	{
		/// <summary>Content</summary>
		Newtonsoft.Json.Linq.JToken Content { get; }

		/// <summary>Date of Message(s)</summary>
		List<DateTime> DateOfMessages { get; }

		/// <summary>Headings</summary>
		object Headings { get; }

		/// <summary>Meta Robots</summary>
		object MetaRobots { get; }

		/// <summary>Originally Posted By</summary>
		string OriginallyPostedBy { get; }

		/// <summary>Original Post Url</summary>
		string OriginalPostUrl { get; }

		/// <summary>Content</summary>
		object PageContent { get; }

		/// <summary>Publish Date</summary>
		DateTime PublishDate { get; }

		/// <summary>Publish Info</summary>
		object PublishInfo { get; }

		/// <summary>Redirects</summary>
		object Redirects { get; }

		/// <summary>SEO Checker</summary>
		SEOChecker.MVC.MetaData SEochecker { get; }

		/// <summary>Subtitle</summary>
		string Subtitle { get; }

		/// <summary>XMLSitemap</summary>
		object XMlsitemap { get; }
	}

	/// <summary>Message</summary>
	[PublishedContentModel("message")]
	public partial class Message : PublishedContentModel, IMessage
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "message";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Message(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Message, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Content
		///</summary>
		[ImplementPropertyType("content")]
		public Newtonsoft.Json.Linq.JToken Content
		{
			get { return GetContent(this); }
		}

		/// <summary>Static getter for Content</summary>
		public static Newtonsoft.Json.Linq.JToken GetContent(IMessage that) { return that.GetPropertyValue<Newtonsoft.Json.Linq.JToken>("content"); }

		///<summary>
		/// Date of Message(s): *Optional: Select all dates that apply to the messages.
		///</summary>
		[ImplementPropertyType("dateOfMessages")]
		public List<DateTime> DateOfMessages
		{
			get { return GetDateOfMessages(this); }
		}

		/// <summary>Static getter for Date of Message(s)</summary>
		public static List<DateTime> GetDateOfMessages(IMessage that) { return that.GetPropertyValue<List<DateTime>>("dateOfMessages"); }

		///<summary>
		/// Headings
		///</summary>
		[ImplementPropertyType("headings")]
		public object Headings
		{
			get { return GetHeadings(this); }
		}

		/// <summary>Static getter for Headings</summary>
		public static object GetHeadings(IMessage that) { return that.GetPropertyValue("headings"); }

		///<summary>
		/// Meta Robots
		///</summary>
		[ImplementPropertyType("metaRobots")]
		public object MetaRobots
		{
			get { return GetMetaRobots(this); }
		}

		/// <summary>Static getter for Meta Robots</summary>
		public static object GetMetaRobots(IMessage that) { return that.GetPropertyValue("metaRobots"); }

		///<summary>
		/// Originally Posted By: *Optional
		///</summary>
		[ImplementPropertyType("originallyPostedBy")]
		public string OriginallyPostedBy
		{
			get { return GetOriginallyPostedBy(this); }
		}

		/// <summary>Static getter for Originally Posted By</summary>
		public static string GetOriginallyPostedBy(IMessage that) { return that.GetPropertyValue<string>("originallyPostedBy"); }

		///<summary>
		/// Original Post Url: *Optional
		///</summary>
		[ImplementPropertyType("originalPostUrl")]
		public string OriginalPostUrl
		{
			get { return GetOriginalPostUrl(this); }
		}

		/// <summary>Static getter for Original Post Url</summary>
		public static string GetOriginalPostUrl(IMessage that) { return that.GetPropertyValue<string>("originalPostUrl"); }

		///<summary>
		/// Content
		///</summary>
		[ImplementPropertyType("pageContent")]
		public object PageContent
		{
			get { return GetPageContent(this); }
		}

		/// <summary>Static getter for Content</summary>
		public static object GetPageContent(IMessage that) { return that.GetPropertyValue("pageContent"); }

		///<summary>
		/// Publish Date
		///</summary>
		[ImplementPropertyType("publishDate")]
		public DateTime PublishDate
		{
			get { return GetPublishDate(this); }
		}

		/// <summary>Static getter for Publish Date</summary>
		public static DateTime GetPublishDate(IMessage that) { return that.GetPropertyValue<DateTime>("publishDate"); }

		///<summary>
		/// Publish Info
		///</summary>
		[ImplementPropertyType("publishInfo")]
		public object PublishInfo
		{
			get { return GetPublishInfo(this); }
		}

		/// <summary>Static getter for Publish Info</summary>
		public static object GetPublishInfo(IMessage that) { return that.GetPropertyValue("publishInfo"); }

		///<summary>
		/// Redirects
		///</summary>
		[ImplementPropertyType("redirects")]
		public object Redirects
		{
			get { return GetRedirects(this); }
		}

		/// <summary>Static getter for Redirects</summary>
		public static object GetRedirects(IMessage that) { return that.GetPropertyValue("redirects"); }

		///<summary>
		/// SEO Checker
		///</summary>
		[ImplementPropertyType("sEOChecker")]
		public SEOChecker.MVC.MetaData SEochecker
		{
			get { return GetSEochecker(this); }
		}

		/// <summary>Static getter for SEO Checker</summary>
		public static SEOChecker.MVC.MetaData GetSEochecker(IMessage that) { return that.GetPropertyValue<SEOChecker.MVC.MetaData>("sEOChecker"); }

		///<summary>
		/// Subtitle: *Optional- Displayed under the page title.
		///</summary>
		[ImplementPropertyType("subtitle")]
		public string Subtitle
		{
			get { return GetSubtitle(this); }
		}

		/// <summary>Static getter for Subtitle</summary>
		public static string GetSubtitle(IMessage that) { return that.GetPropertyValue<string>("subtitle"); }

		///<summary>
		/// XMLSitemap
		///</summary>
		[ImplementPropertyType("xMLSitemap")]
		public object XMlsitemap
		{
			get { return GetXMlsitemap(this); }
		}

		/// <summary>Static getter for XMLSitemap</summary>
		public static object GetXMlsitemap(IMessage that) { return that.GetPropertyValue("xMLSitemap"); }
	}
}
